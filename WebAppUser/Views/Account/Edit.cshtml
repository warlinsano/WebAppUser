@model WebAppUser.Data.User

@{
    ViewData["Title"] = "Edit";
}

@*<h1>Edit</h1>

    <h4>AspNetUsers</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <div class="form-group">
                    <label asp-for="UserName" class="control-label"></label>
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NormalizedUserName" class="control-label"></label>
                    <input asp-for="NormalizedUserName" class="form-control" />
                    <span asp-validation-for="NormalizedUserName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NormalizedEmail" class="control-label"></label>
                    <input asp-for="NormalizedEmail" class="form-control" />
                    <span asp-validation-for="NormalizedEmail" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="EmailConfirmed" /> @Html.DisplayNameFor(model => model.EmailConfirmed)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="PasswordHash" class="control-label"></label>
                    <input asp-for="PasswordHash" class="form-control" />
                    <span asp-validation-for="PasswordHash" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SecurityStamp" class="control-label"></label>
                    <input asp-for="SecurityStamp" class="form-control" />
                    <span asp-validation-for="SecurityStamp" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConcurrencyStamp" class="control-label"></label>
                    <input asp-for="ConcurrencyStamp" class="form-control" />
                    <span asp-validation-for="ConcurrencyStamp" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PhoneNumber" class="control-label"></label>
                    <input asp-for="PhoneNumber" class="form-control" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="PhoneNumberConfirmed" /> @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="TwoFactorEnabled" /> @Html.DisplayNameFor(model => model.TwoFactorEnabled)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="LockoutEnd" class="control-label"></label>
                    <input asp-for="LockoutEnd" class="form-control" />
                    <span asp-validation-for="LockoutEnd" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="LockoutEnabled" /> @Html.DisplayNameFor(model => model.LockoutEnabled)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="AccessFailedCount" class="control-label"></label>
                    <input asp-for="AccessFailedCount" class="form-control" />
                    <span asp-validation-for="AccessFailedCount" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }*@


<h1>Edit</h1>

<h4>AspNetUsers</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" disabled />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NormalizedUserName" class="control-label"></label>
                <input asp-for="NormalizedUserName" class="form-control" disabled />
                <span asp-validation-for="NormalizedUserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" disabled />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                    <label asp-for="NormalizedEmail" class="control-label"></label>
                    <input asp-for="NormalizedEmail" class="form-control" />
                    <span asp-validation-for="NormalizedEmail" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="EmailConfirmed" /> @Html.DisplayNameFor(model => model.EmailConfirmed)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="PasswordHash" class="control-label"></label>
                    <input asp-for="PasswordHash" class="form-control" />
                    <span asp-validation-for="PasswordHash" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SecurityStamp" class="control-label"></label>
                    <input asp-for="SecurityStamp" class="form-control" />
                    <span asp-validation-for="SecurityStamp" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConcurrencyStamp" class="control-label"></label>
                    <input asp-for="ConcurrencyStamp" class="form-control" />
                    <span asp-validation-for="ConcurrencyStamp" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PhoneNumber" class="control-label"></label>
                    <input asp-for="PhoneNumber" class="form-control" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="PhoneNumberConfirmed" /> @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="TwoFactorEnabled" /> @Html.DisplayNameFor(model => model.TwoFactorEnabled)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="LockoutEnd" class="control-label"></label>
                    <input asp-for="LockoutEnd" class="form-control" />
                    <span asp-validation-for="LockoutEnd" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="LockoutEnabled" /> @Html.DisplayNameFor(model => model.LockoutEnabled)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="AccessFailedCount" class="control-label"></label>
                    <input asp-for="AccessFailedCount" class="form-control" />
                    <span asp-validation-for="AccessFailedCount" class="text-danger"></span>
                </div>*@


            <div class="form-group">
                @Html.LabelFor(model => model.Estado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="">
                    @Html.DropDownList("Estado", null, htmlAttributes: new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <label class="control-label ">Roles</label>
                <div class="col-md-10" style="background-color:white; bo">
                    @for (int e = 0; e < (Model.todosRoles.Length) / 2; e++)
                    {
                        if (Model.todosRoles[e, 1] == "true")
                        {
                            <label><input type="checkbox" name="role" value="@Model.todosRoles[e, 0]" checked> @Model.todosRoles[e, 0].Replace("_", " ")</label><br>
                        }
                        else
                        {
                            <label><input type="checkbox" name="role" value="@Model.todosRoles[e, 0]"> @Model.todosRoles[e, 0].Replace("_", " ")</label><br>
                        }
                    }

                </div>
            </div>


            @*<div class="form-group row">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                        @Html.ActionLink("Cancelar", "Index", "Usuarios", null, new { @class = "btn btn-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <button type="submit" class="btn btn-danger ">
                    Save
                    <span aria-hidden="true" class="fa fa-pencil-alt fa-fw"></span>
                </button>

                <a asp-action="Index" class="btn btn-primary">
                    Back to List
                    <span aria-hidden="true" class="fa fa-share"></span>
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


